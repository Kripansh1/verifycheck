"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_services_emailService_ts";
exports.ids = ["src_services_emailService_ts"];
exports.modules = {

/***/ "./src/services/emailService.ts":
/*!**************************************!*\
  !*** ./src/services/emailService.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendEmail: () => (/* binding */ sendEmail)\n/* harmony export */ });\n/* harmony import */ var _emailjs_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emailjs/browser */ \"@emailjs/browser\");\n/* harmony import */ var _emailjs_browser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_emailjs_browser__WEBPACK_IMPORTED_MODULE_0__);\n\n// EmailJS configuration - using environment variables\nconst EMAILJS_SERVICE_ID = /* unsupported import.meta.env.VITE_EMAILJS_SERVICE_ID */ undefined.VITE_EMAILJS_SERVICE_ID;\nconst EMAILJS_TEMPLATE_ID = /* unsupported import.meta.env.VITE_EMAILJS_TEMPLATE_ID */ undefined.VITE_EMAILJS_TEMPLATE_ID;\nconst EMAILJS_PUBLIC_KEY = /* unsupported import.meta.env.VITE_EMAILJS_PUBLIC_KEY */ undefined.VITE_EMAILJS_PUBLIC_KEY;\nconst sendEmail = async (formData)=>{\n    try {\n        // Check if EmailJS is configured\n        if (!EMAILJS_SERVICE_ID || !EMAILJS_TEMPLATE_ID || !EMAILJS_PUBLIC_KEY) {\n            console.error(\"EmailJS configuration missing\");\n            return {\n                success: false,\n                message: \"Email service not configured. Please contact us directly at verifykart2@gmail.com\"\n            };\n        }\n        // Initialize EmailJS (only needs to be done once)\n        _emailjs_browser__WEBPACK_IMPORTED_MODULE_0___default().init(EMAILJS_PUBLIC_KEY);\n        // Prepare template parameters\n        const templateParams = {\n            from_name: formData.name,\n            from_email: formData.email || \"Not provided\",\n            company: formData.company || \"Not provided\",\n            phone: formData.phone,\n            service: formData.service || \"Not specified\",\n            to_email: \"verifykart2@gmail.com\",\n            message: `\nNew form submission from VerifyCheck website:\n\nName: ${formData.name}\nCompany: ${formData.company || \"Not provided\"}\nEmail: ${formData.email || \"Not provided\"}\nPhone: ${formData.phone}\nService Needed: ${formData.service || \"Not specified\"}\nSubmission Time: ${new Date().toLocaleString()}\n      `.trim()\n        };\n        // Send email using EmailJS\n        const response = await _emailjs_browser__WEBPACK_IMPORTED_MODULE_0___default().send(EMAILJS_SERVICE_ID, EMAILJS_TEMPLATE_ID, templateParams);\n        if (response.status === 200) {\n            return {\n                success: true,\n                message: \"Form submitted successfully! We will contact you soon.\"\n            };\n        } else {\n            throw new Error(\"Failed to send email\");\n        }\n    } catch (error) {\n        console.error(\"EmailJS error:\", error);\n        return {\n            success: false,\n            message: \"Failed to submit form. Please try again later or contact us directly at verifykart2@gmail.com\"\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2VydmljZXMvZW1haWxTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1QztBQUV2QyxzREFBc0Q7QUFDdEQsTUFBTUMscUJBQXFCLDJGQUF1QztBQUNsRSxNQUFNRyxzQkFBc0IsNkZBQXdDO0FBQ3BFLE1BQU1FLHFCQUFxQiwyRkFBdUM7QUFVM0QsTUFBTUUsWUFBWSxPQUFPQztJQUM5QixJQUFJO1FBQ0YsaUNBQWlDO1FBQ2pDLElBQUksQ0FBQ1Isc0JBQXNCLENBQUNHLHVCQUF1QixDQUFDRSxvQkFBb0I7WUFDdEVJLFFBQVFDLEtBQUssQ0FBQztZQUNkLE9BQU87Z0JBQ0xDLFNBQVM7Z0JBQ1RDLFNBQVM7WUFDWDtRQUNGO1FBRUEsa0RBQWtEO1FBQ2xEYiw0REFBWSxDQUFDTTtRQUViLDhCQUE4QjtRQUM5QixNQUFNUyxpQkFBaUI7WUFDckJDLFdBQVdQLFNBQVNRLElBQUk7WUFDeEJDLFlBQVlULFNBQVNVLEtBQUssSUFBSTtZQUM5QkMsU0FBU1gsU0FBU1csT0FBTyxJQUFJO1lBQzdCQyxPQUFPWixTQUFTWSxLQUFLO1lBQ3JCQyxTQUFTYixTQUFTYSxPQUFPLElBQUk7WUFDN0JDLFVBQVU7WUFDVlYsU0FBUyxDQUFDOzs7TUFHVixFQUFFSixTQUFTUSxJQUFJLENBQUM7U0FDYixFQUFFUixTQUFTVyxPQUFPLElBQUksZUFBZTtPQUN2QyxFQUFFWCxTQUFTVSxLQUFLLElBQUksZUFBZTtPQUNuQyxFQUFFVixTQUFTWSxLQUFLLENBQUM7Z0JBQ1IsRUFBRVosU0FBU2EsT0FBTyxJQUFJLGdCQUFnQjtpQkFDckMsRUFBRSxJQUFJRSxPQUFPQyxjQUFjLEdBQUc7TUFDekMsQ0FBQyxDQUFDQyxJQUFJO1FBQ1I7UUFFQSwyQkFBMkI7UUFDM0IsTUFBTUMsV0FBVyxNQUFNM0IsNERBQVksQ0FDakNDLG9CQUNBRyxxQkFDQVc7UUFHRixJQUFJWSxTQUFTRSxNQUFNLEtBQUssS0FBSztZQUMzQixPQUFPO2dCQUNMakIsU0FBUztnQkFDVEMsU0FBUztZQUNYO1FBQ0YsT0FBTztZQUNMLE1BQU0sSUFBSWlCLE1BQU07UUFDbEI7SUFDRixFQUFFLE9BQU9uQixPQUFPO1FBQ2RELFFBQVFDLEtBQUssQ0FBQyxrQkFBa0JBO1FBQ2hDLE9BQU87WUFDTEMsU0FBUztZQUNUQyxTQUFTO1FBQ1g7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZXJpZnljaGVjay1uZXh0anMvLi9zcmMvc2VydmljZXMvZW1haWxTZXJ2aWNlLnRzPzI1YmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVtYWlsanMgZnJvbSAnQGVtYWlsanMvYnJvd3Nlcic7XG5cbi8vIEVtYWlsSlMgY29uZmlndXJhdGlvbiAtIHVzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlc1xuY29uc3QgRU1BSUxKU19TRVJWSUNFX0lEID0gaW1wb3J0Lm1ldGEuZW52LlZJVEVfRU1BSUxKU19TRVJWSUNFX0lEO1xuY29uc3QgRU1BSUxKU19URU1QTEFURV9JRCA9IGltcG9ydC5tZXRhLmVudi5WSVRFX0VNQUlMSlNfVEVNUExBVEVfSUQ7XG5jb25zdCBFTUFJTEpTX1BVQkxJQ19LRVkgPSBpbXBvcnQubWV0YS5lbnYuVklURV9FTUFJTEpTX1BVQkxJQ19LRVk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybURhdGEge1xuICBuYW1lOiBzdHJpbmc7XG4gIGNvbXBhbnk/OiBzdHJpbmc7XG4gIGVtYWlsPzogc3RyaW5nO1xuICBwaG9uZTogc3RyaW5nO1xuICBzZXJ2aWNlPzogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3Qgc2VuZEVtYWlsID0gYXN5bmMgKGZvcm1EYXRhOiBGb3JtRGF0YSk6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBtZXNzYWdlOiBzdHJpbmcgfT4gPT4ge1xuICB0cnkge1xuICAgIC8vIENoZWNrIGlmIEVtYWlsSlMgaXMgY29uZmlndXJlZFxuICAgIGlmICghRU1BSUxKU19TRVJWSUNFX0lEIHx8ICFFTUFJTEpTX1RFTVBMQVRFX0lEIHx8ICFFTUFJTEpTX1BVQkxJQ19LRVkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0VtYWlsSlMgY29uZmlndXJhdGlvbiBtaXNzaW5nJyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0VtYWlsIHNlcnZpY2Ugbm90IGNvbmZpZ3VyZWQuIFBsZWFzZSBjb250YWN0IHVzIGRpcmVjdGx5IGF0IHZlcmlmeWthcnQyQGdtYWlsLmNvbSdcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gSW5pdGlhbGl6ZSBFbWFpbEpTIChvbmx5IG5lZWRzIHRvIGJlIGRvbmUgb25jZSlcbiAgICBlbWFpbGpzLmluaXQoRU1BSUxKU19QVUJMSUNfS0VZKTtcblxuICAgIC8vIFByZXBhcmUgdGVtcGxhdGUgcGFyYW1ldGVyc1xuICAgIGNvbnN0IHRlbXBsYXRlUGFyYW1zID0ge1xuICAgICAgZnJvbV9uYW1lOiBmb3JtRGF0YS5uYW1lLFxuICAgICAgZnJvbV9lbWFpbDogZm9ybURhdGEuZW1haWwgfHwgJ05vdCBwcm92aWRlZCcsXG4gICAgICBjb21wYW55OiBmb3JtRGF0YS5jb21wYW55IHx8ICdOb3QgcHJvdmlkZWQnLFxuICAgICAgcGhvbmU6IGZvcm1EYXRhLnBob25lLFxuICAgICAgc2VydmljZTogZm9ybURhdGEuc2VydmljZSB8fCAnTm90IHNwZWNpZmllZCcsXG4gICAgICB0b19lbWFpbDogJ3ZlcmlmeWthcnQyQGdtYWlsLmNvbScsXG4gICAgICBtZXNzYWdlOiBgXG5OZXcgZm9ybSBzdWJtaXNzaW9uIGZyb20gVmVyaWZ5Q2hlY2sgd2Vic2l0ZTpcblxuTmFtZTogJHtmb3JtRGF0YS5uYW1lfVxuQ29tcGFueTogJHtmb3JtRGF0YS5jb21wYW55IHx8ICdOb3QgcHJvdmlkZWQnfVxuRW1haWw6ICR7Zm9ybURhdGEuZW1haWwgfHwgJ05vdCBwcm92aWRlZCd9XG5QaG9uZTogJHtmb3JtRGF0YS5waG9uZX1cblNlcnZpY2UgTmVlZGVkOiAke2Zvcm1EYXRhLnNlcnZpY2UgfHwgJ05vdCBzcGVjaWZpZWQnfVxuU3VibWlzc2lvbiBUaW1lOiAke25ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKX1cbiAgICAgIGAudHJpbSgpXG4gICAgfTtcblxuICAgIC8vIFNlbmQgZW1haWwgdXNpbmcgRW1haWxKU1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZW1haWxqcy5zZW5kKFxuICAgICAgRU1BSUxKU19TRVJWSUNFX0lELFxuICAgICAgRU1BSUxKU19URU1QTEFURV9JRCxcbiAgICAgIHRlbXBsYXRlUGFyYW1zXG4gICAgKTtcblxuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ0Zvcm0gc3VibWl0dGVkIHN1Y2Nlc3NmdWxseSEgV2Ugd2lsbCBjb250YWN0IHlvdSBzb29uLidcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHNlbmQgZW1haWwnKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRW1haWxKUyBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBzdWJtaXQgZm9ybS4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlciBvciBjb250YWN0IHVzIGRpcmVjdGx5IGF0IHZlcmlmeWthcnQyQGdtYWlsLmNvbSdcbiAgICB9O1xuICB9XG59O1xuIl0sIm5hbWVzIjpbImVtYWlsanMiLCJFTUFJTEpTX1NFUlZJQ0VfSUQiLCJlbnYiLCJWSVRFX0VNQUlMSlNfU0VSVklDRV9JRCIsIkVNQUlMSlNfVEVNUExBVEVfSUQiLCJWSVRFX0VNQUlMSlNfVEVNUExBVEVfSUQiLCJFTUFJTEpTX1BVQkxJQ19LRVkiLCJWSVRFX0VNQUlMSlNfUFVCTElDX0tFWSIsInNlbmRFbWFpbCIsImZvcm1EYXRhIiwiY29uc29sZSIsImVycm9yIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJpbml0IiwidGVtcGxhdGVQYXJhbXMiLCJmcm9tX25hbWUiLCJuYW1lIiwiZnJvbV9lbWFpbCIsImVtYWlsIiwiY29tcGFueSIsInBob25lIiwic2VydmljZSIsInRvX2VtYWlsIiwiRGF0ZSIsInRvTG9jYWxlU3RyaW5nIiwidHJpbSIsInJlc3BvbnNlIiwic2VuZCIsInN0YXR1cyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/services/emailService.ts\n");

/***/ })

};
;